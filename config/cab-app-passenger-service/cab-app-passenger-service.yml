spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/changelog/changelog.xml
  jackson:
    deserialization:
      fail-on-unknown-properties: true

  cloud:
    function:
      definition: notifyAboutRideAcceptance
    stream:
      bindings:
        notifyAboutRideAcceptance-in-0:
          destination: acceptedRideTopic
          content-type: application/json
          group: passengers
      kafka:
        binder:
          brokers: "${KAFKA_HOST}:${KAFKA_PORT}"
          enable-observation: true

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: cab-app
            client-secret: ${CAB_APP_CLIENT_SECRET}
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:8180/realms/cab-app-realm
          jwk-set-uri: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}/realms/cab-app-realm/protocol/openid-connect/certs

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v2/spans

logging:
  level:
    root: info
    liquibase: error

exception:
  handling:
    include: true

token:
  converter:
    include: true
    principal-attribute: preferred_username
    resource-id: cab-app

keycloak:
  server-url: http://${KEYCLOAK_HOST}:${KEYCLOAK_PORT}
  realm: cab-app-realm
