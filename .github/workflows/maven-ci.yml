name: Java CI with Maven

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

env:
  INNER_DEPENDENCIES: |
    cab-app-common/
    cab-app-exception-handling-starter/

jobs:
  test:
    runs-on: ubuntu-latest
    name: Maven Test
    steps:
    - uses: actions/checkout@v4
      with:
         fetch-depth: 0
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
         java-version: '21'
         distribution: 'temurin'
         cache: maven
    - name: Push or pull-request to non-protected branches
      if: ${{ (github.event_name == 'push' &&
                github.ref != 'refs/heads/dev' &&
                github.ref != 'refs/heads/main') ||
              (github.event_name == 'pull_request' &&
                github.base_ref != 'dev' &&
                github.base_ref != 'main') }}
      run: |
        flag=0
        for dep in $INNER_DEPENDENCIES; do
            if [[ $(git diff --quiet HEAD origin/dev -- "$dep") -ne 0 ]]; then
                echo "Changes in inner dependency: $dep while working in non-protected branch"
                flag=1
                break
            fi
        done
        if [[ "$flag" -eq 1 ]]; then
            mvn test
        else
            for dep in $INNER_DEPENDENCIES; do
                mvn install --file "$dep"pom.xml
            done
            for service in *service/; do
                git diff --quiet HEAD origin/dev -- "$service" || { echo "Changes in $service while working in non-protected branch";
                    mvn test --file "$service"pom.xml; }
            done
        fi
    - name: Push or pull-request to dev branch
      if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/dev') ||
              (github.event_name == 'pull_request' && github.base_ref == 'dev') }}
      run: |
        flag=0
        for dep in $INNER_DEPENDENCIES; do
            if [[ $(git diff --quiet HEAD origin/dev -- "$dep") -ne 0 ]]; then
                echo "Changes in inner dependency: $dep while applying to dev"
                flag=1
                break
            fi
        done
        for service in *service/; do
            mvn clean spring-cloud-contract:convert --file "$service"pom.xml
            mvn spring-cloud-contract:generateStubs --file "$service"pom.xml

            artifactId=${service::-1}
            stubsJarFullPath=$(ls "$service"target/*-stubs.jar)
            stubsJar=${stubsJarFullPath//$service/}

            mvn install:install-file \
                -Dfile="$stubsJar" \
                -DgroupId=by.arvisit \
                -DartifactId="$artifactId" \
                -Dversion=0.0.1-SNAPSHOT \
                -Dpackaging=jar \
                -Dclassifier=stubs \
                --file "$service"pom.xml
        done
        if [[ "$flag" -eq 1 ]]; then
            mvn verify
        else
            for dep in $INNER_DEPENDENCIES; do
                mvn install --file "$dep"pom.xml
            done
            for service in *service/; do
                git diff --quiet HEAD origin/dev -- "$service" || { echo "Changes in $service while applying to dev";
                    mvn verify --file "$service"pom.xml; }
            done
        fi
    - name: Push or pull-request to main branch
      if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
              (github.event_name == 'pull_request' && github.base_ref == 'main') }}
      run: |
        flag=0
        for dep in $INNER_DEPENDENCIES; do
            if [[ $(git diff --quiet HEAD origin/main -- "$dep") -ne 0 ]]; then
                echo "Changes in inner dependency: $dep while applying to main"
                flag=1
                break
            fi
        done
        for service in *service/; do
            mvn clean spring-cloud-contract:convert --file "$service"pom.xml
            mvn spring-cloud-contract:generateStubs --file "$service"pom.xml

            artifactId=${service::-1}
            stubsJarFullPath=$(ls "$service"target/*-stubs.jar)
            stubsJar=${stubsJarFullPath//$service/}

            mvn install:install-file \
                -Dfile="$stubsJar" \
                -DgroupId=by.arvisit \
                -DartifactId="$artifactId" \
                -Dversion=0.0.1-SNAPSHOT \
                -Dpackaging=jar \
                -Dclassifier=stubs \
                --file "$service"pom.xml
        done
        if [[ "$flag" -eq 1 ]]; then
            mvn verify
        else
            for dep in $INNER_DEPENDENCIES; do
                mvn install --file "$dep"pom.xml
            done
            for service in *service/; do
                git diff --quiet HEAD origin/main -- "$service" || { echo "Changes in $service while applying to main";
                    mvn verify --file "$service"pom.xml; }
            done
        fi
